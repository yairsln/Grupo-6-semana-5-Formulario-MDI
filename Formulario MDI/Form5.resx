<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>